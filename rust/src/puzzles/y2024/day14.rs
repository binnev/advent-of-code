use regex::Regex;

use crate::utils::{Coord, SparseMatrix};
use std::collections::HashSet;

pub fn part1(input: &str) -> usize {
    do_the_thing(input, 100, Coord(101, 103))
}
pub fn part2(input: &str) -> usize {
    let mut robots = parse(input);
    let limits = Coord(101, 103);
    for ii in 1.. {
        for robot in robots.iter_mut() {
            robot.position = simulate_robot(robot, 1, limits);
        }
        if is_tree(&robots, limits) {
            print_robots(&robots, limits);
            return ii;
        }
    }
    unreachable!()
}
/// For sanity checking
fn print_robots(robots: &Vec<Robot>, limits: Coord) {
    let tmp = robots_to_matrix(robots, limits);
    let printable: SparseMatrix<char> = SparseMatrix {
        contents: tmp
            .contents
            .into_iter()
            .map(|(coord, n)| {
                let ch = match n {
                    0 => '.',
                    _ => format!("{n}").chars().next().unwrap(),
                };
                (coord, ch)
            })
            .collect(),
    };
    println!("{printable}");
}
fn robots_to_matrix(
    robots: &Vec<Robot>,
    Coord(xlim, ylim): Coord,
) -> SparseMatrix<usize> {
    let mut map: SparseMatrix<usize> = SparseMatrix::new();
    for x in 0..xlim {
        for y in 0..ylim {
            // explicitly populate empty squares so we can see the limits
            map.insert((x, y).into(), 0);
        }
    }
    for robot in robots.iter() {
        map.entry(robot.position)
            .and_modify(|e| *e += 1)
            .or_insert(1);
    }
    map
}
/// I'm not sure why this works, but on the iteration where the robots form the
/// christmas tree, there are no overlaps.
fn is_tree(robots: &Vec<Robot>, Coord(xlim, ylim): Coord) -> bool {
    let unique_positions: HashSet<Coord> = robots
        .iter()
        .map(|r| r.position)
        .collect();
    return unique_positions.len() == robots.len();
}
fn do_the_thing(input: &str, steps: i64, limits: Coord) -> usize {
    let robots = parse(input);
    let truncated_positions: Vec<Coord> = robots
        .iter()
        .map(|robot| simulate_robot(robot, steps, limits))
        .collect();
    let (a, b, c, d) = count_robots(&truncated_positions, limits);
    a * b * c * d
}
/// Count how many robots are in each quadrant
fn count_robots(
    positions: &Vec<Coord>,
    Coord(xlim, ylim): Coord,
) -> (usize, usize, usize, usize) {
    assert!(xlim % 2 != 0); // limits should be odd
    assert!(ylim % 2 != 0);
    let middle_x = xlim / 2;
    let middle_y = ylim / 2;
    let (mut topleft, mut topright, mut btmleft, mut btmright) = (0, 0, 0, 0);
    for Coord(x, y) in positions {
        let dx = x - middle_x;
        let dy = y - middle_y;
        if dx < 0 && dy < 0 {
            topleft += 1
        } else if dx > 0 && dy < 0 {
            topright += 1
        } else if dx < 0 && dy > 0 {
            btmleft += 1
        } else if dx > 0 && dy > 0 {
            btmright += 1
        }
    }
    (topleft, topright, btmleft, btmright)
}
/// Calculate the robot's position after the given number of steps
fn simulate_robot(
    robot: &Robot,
    steps: i64,
    Coord(xlim, ylim): Coord,
) -> Coord {
    let (mut x, mut y) = robot.position.into();
    let (u, v) = robot.velocity.into();
    x += u * steps;
    y += v * steps;
    x = wrap(x, xlim);
    y = wrap(y, ylim);
    Coord(x, y)
}
fn wrap(x: i64, limit: i64) -> i64 {
    let mut x = x;
    x %= limit;
    if x < 0 {
        x += limit
    }
    x
}
#[derive(PartialEq, Eq, Debug)]
struct Robot {
    position: Coord,
    velocity: Coord,
}
fn parse(input: &str) -> Vec<Robot> {
    input
        .lines()
        .map(|line| parse_line(line).unwrap())
        .collect()
}
fn parse_line(line: &str) -> Option<Robot> {
    let rx = Regex::new(r"p=(\d+),(\d+) v=(-?\d+),(-?\d+)").unwrap();
    let caps = rx.captures(line)?;
    let x = caps.get(1)?.as_str().parse().ok()?;
    let y = caps.get(2)?.as_str().parse().ok()?;
    let u = caps.get(3)?.as_str().parse().ok()?;
    let v = caps.get(4)?.as_str().parse().ok()?;
    Some(Robot {
        position: Coord(x, y),
        velocity: Coord(u, v),
    })
}
const EXAMPLE: &str = "p=0,4 v=3,-3
p=6,3 v=-1,-3
p=10,3 v=-1,2
p=2,0 v=2,-1
p=0,0 v=1,3
p=3,0 v=-2,-2
p=7,6 v=-1,-3
p=3,0 v=-1,-2
p=9,3 v=2,3
p=7,3 v=-1,2
p=2,4 v=2,-3
p=9,5 v=-3,-3";
const TREE_FRAME: &str = "...................................3.................................5...............................
.........................................................................1..........8................
................................6...............8....................................................
..........1..............................................8..............2............................
...................................3.................................................................
.....................................1.......2......................6................................
.....................................................................................................
.....................................................................................................
.....................................................................................................
.....................................................................................................
..........................................................7........................9.................
...................................3.................................................................
................4..........................................6..........4..............................
.....................................................................................................
.............................9............................7..........................................
.....................................................................................................
.....................................1...............................................................
................................6...................................6................................
................................6...............8......................................5.............
.....................................................................................................
.....................................................................................................
...................................................................................9.................
...........................2........................................................................1
..........1.....4.............8..........................8.....2.....................................
...................................................5...............................9..6..............
................................................................................3...................1
..9.............................................................1....................................
..............................................................................5......................
....................................2.............................................................3..
..............6....................................................7...............9.................
..............................................................3...........9.............4............
....................................................................................8......1.........
....................................................................6..3.............................
........................................................................2............................
.........................................6.....................2.....................................
.............7........................9..............................................................
.......................................................1.............................................
.....................................................................................................
.1...........7......9......................4.......................7..........................7......
...............................7...................5..........................5...1...6............2.
.....................................................................................................
............................................3219876543219876543219876543219..........................
.......................6....................3.............................9.............4............
............................................3.............................9..........................
...........................2................3.............................9..........................
.........2..................................3.............................9............5.............
............................................3..............6..............9........9.................
..9..6.....................2................3.............765.............9..........................
............................................3............87654............9..............3...........
............................................3...........9876543...........9..........................
.....................8......................3..........198765432..........9..........................
..........1.................................3............87654............9..........................
............................................3...........9876543...........9..........................
............................................3..........198765432..........9..........................
...................1........................3.........21987654321.........9.......1..................
..........1.................................3........3219876543219........9......................4...
...............5............................3..........198765432..........9..........................
...........9...5............................3.........21987654321.........9..........................
.........................4..................3........3219876543219........9.......................3..
............................................3.......432198765432198.......9..........................
............................................3......54321987654321987......9..........................
............................................3........3219876543219........9..........................
..........1.................................3.......432198765432198.......9..........................
............................................3......54321987654321987......9..........................
........................5........5..........3.....6543219876543219876.....9..........................
............................................3....765432198765432198765....9..........................
....7.......................................3.............765.............9..........................
..9.....................5...................3.............765.............9...................7......
...............5............................3.............765.............9..........................
.............7..............................3.............................9..........................
..............6...........................5.3.............................9..........................
............................................3.............................9................1.........
............................................3.............................9..........................
....................9.......................3219876543219876543219876543219..........................
.....................................................................................................
..............................................................3......................................
......5..............................................................................................
................................6.........................................................2..........
.................3...............................7.................7.................................
.....................8............................................87......9..........................
...............5...................................5.................................................
........................................7............................................................
.....................................................................................................
.....................................................................................................
.....................................................................................................
.......................6.4...........................................................................
......5..2.........................3......................7..........................................
..........................................5................6.................................8.......
.1...................................................................................................
......................7.................................9............................................
................4....................................................................................
................................6....................................................................
......................................................................................6..............
..........1.......................4..................................................................
.......................................8........................................................5....
.....................................................................................................
.....................................................................................................
................................................................................................5....
...............................7.....................................................................
...............5.......6.............................................................................
......................7.............................................................8................
..................................................................8..................................
.....................................................................................................";
const RANDOM_FRAME: &str = ".......................................................1..........8..................................
.........................................6..................5........................................
.........2...........................1...............................................................
...................................3..................................4..........................4...
..................................................................8..................................
..............................8...........................7...........4..............................
.....................................................................................................
.....................................................................................................
.....................................................................................................
.....................................................................................................
.................3................................6..................................................
.................................................................................................4...
..........19...................................................................................6.....
.....................................................................................................
.................................................................9........................2..........
.....................................................................................................
..........................................................................................2..........
...........................................4................................7........................
............8............................6....................................................7......
.....................................................................................................
.....................................................................................................
...............................................9.....................................................
....7.....................3..........................................................................
.............................9....................6...........3...................1....5.............
.........2..........................2........2.......................................................
...........9............................7............................................................
..........................3........................................7.................................
................................6....................................................................
......................7.................................................................4............
.1...........................9.....................................................................2.
...........9.......................3..................................................6..............
...........................2.............................................................3...........
..............6................................................2.....................................
.................................................................9...................................
..............................................1...................8..................................
........................5..........................5.................................................
.....................................................................................7...............
.....................................................................................................
..9..............3........................5.3............8.................8.........................
2................3.....6............2......4.........................5...............................
.....................................................................................................
.1.....4......3....19........9...5.3....73...21....5.....873........65.3.........2..87.....1.7..5.3..
................4................................7..........................7.....1..................
.........................................................87..........................................
..............6.......7..............................3...............................................
..98...............................................5........5........................................
..........1..................9.........8.......................2.....................................
......................76.......76.............1.......................43............................1
...........9.......1....5..2................................5........1...........................4...
.1.....8............9.......................3.....6...........3..............6...........3...........
2.....54....8....32..............54........4..........2.....5......7.................................
...................................3.....6..3..........1................2.................21..7......
..........1........1....5...................3....7..........................7..4.........3..9........
.2..7.............2.........1.......2....6...........3......................7...........4.....7......
..9...5.3.............7..4.................4..1...6.................6.......7........7........7..4.4.
.......4.......5......7......9..........7.5...19...............6........2...7.5........5.......6..3..
........3....76............2...7....................................6.......76.........5..........3.2
..9..........7.5.........8...98.......9..35....9...5......7..........5...............................
...8....6.....6.4.....7654.21.....................6..............................4..8.6..3...........
...........9...................7.....1.......4....6...2.9.7...........432.98....3......5........5....
...87......9.........8..1....98...........54.......5......7..4..............7.....1.......2.......6.1
..................2.98..5.....8.........76......8........8..........6.......5..4....8.....2..........
..................2........21.......21.8.6......8....3.......4....87........7.......876.....98.......
.......43..............6.4.............7..5......76..3.....6.8..1..7....21......................5.3..
.19...54.4.........1......3.............76........6........6...2.9...........6...2..87.5..2..8...4...
...87......9..65...........2......8...9.7..43............8..5.3..9.............8.2.98........87......
...........9.........................................3.....6...2..........................2..8.......
........3...........9.7....2.................................................6.4..2..................
..9...5.....................1.......2.......................................7.......................1
................4.2............................................................4.....................
............................1.........................................4.....................9......2.
2.................2.............................................1....................................
2.........................................................................................2..........
.19....4....7..5.....8.6.....9......4198....32.9..65.....57.....19...5..................8.4.......3..
.....................................................................................................
............................................................................7........................
...................................................5.................................................
...................1.8...............................................................................
.....6...............8....................................................................2..........
..9.............4.......5................................................1...........................
.......................................................................3.......................6.....
.......................................................................................5.............
.....................................................................................................
.....................................................................................................
.....................................................................................................
........3.....................................1......................................................
...................1....5...................................................7.......................1
............................1.............5........................7.................................
.....................8...............................................................................
.....................8............4..................................................................
.........................................................................................3...........
..................................................6..................................................
..................................................................................................3..
.....................................1................................4..............................
..9....................6.............................................................................
.....................................................................................................
.....................................................................................................
.................................................7...................................................
..................................................................8..................................
......5............1.................................................................................
...............................7.........................8...........................................
................................................................................................5....
.....................................................................................................";
#[cfg(test)]
mod tests {
    use std::collections::HashSet;

    use crate::utils::SparseMatrix;

    use super::*;
    #[test]
    fn test_part1() {
        let limits = Coord(11, 7);
        assert_eq!(do_the_thing(EXAMPLE, 100, limits), 12);
    }
    #[test]
    fn test_parse_line() {
        let line = "p=2,4 v=2,-3";
        let expected = Robot {
            position: Coord(2, 4),
            velocity: Coord(2, -3),
        };
        assert_eq!(parse_line(line).unwrap(), expected);
    }
    #[test]
    fn test_parse() {
        let expected_str = "1.12.......
...........
...........
......11.11
1.1........
.........1.
.......1...";
        let tmp: SparseMatrix<char> = expected_str.into();
        let expected = SparseMatrix {
            contents: tmp
                .clone()
                .into_iter()
                .filter(|(_, v)| *v != '.')
                .map(|(k, v)| (k, v.to_digit(10).unwrap()))
                .collect(),
        };
        let robots = parse(EXAMPLE);
        let mut map: SparseMatrix<u32> = SparseMatrix::new();
        for r in robots {
            map.entry(r.position)
                .and_modify(|e| *e += 1)
                .or_insert(1);
        }
        assert_eq!(map, expected);
    }
    #[test]
    fn test_wrap() {
        let width = 5;
        assert_eq!(wrap(0, width), 0);
        assert_eq!(wrap(4, width), 4); // 4 is the last pos in a 5-wide array
        assert_eq!(wrap(5, width), 0); // 5 should wrap back to 0
        assert_eq!(wrap(-1, width), 4); // -1 should wrap back to 4
        assert_eq!(wrap(-2, width), 3);
        assert_eq!(wrap(-3, width), 2);
        assert_eq!(wrap(-4, width), 1);
        assert_eq!(wrap(-5, width), 0);
        assert_eq!(wrap(-6, width), 4); // multiple wraps should work
    }
}
